name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

#Permission to download from another workflow
permissions:
  actions: read
  contents: read

jobs:
    deploy:
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3


            - name: Download model artifacts from CI
              uses: dawidd6/action-download-artifact@v2
              with:
                workflow: ci.yml
                workflow_conclusion: success
                run_id: ${{ github.event.workflow_run.id }}
                name: models
                path: ./models
                github_token: ${{ secrets.GITHUB_TOKEN }}
                check_artifacts: true
            
            - name: Download MLFlow artifacts from CI
              uses: dawidd6/action-download-artifact@v2
              with:
                workflow: ci.yml
                workflow_conclusion: success
                run_id: ${{ github.event.workflow_run.id }}
                name: mlruns
                path: ./mlruns
                github_token: ${{ secrets.GITHUB_TOKEN }}
                check_artifacts: true

            - name: Setup Docker
              uses: docker/setup-buildx-action@v2
              
            - name: Build and run with Docker compose
              run : docker compose up --build -d
            
            - name: Wait for services to be ready
              run: sleep 30
            
            - name: List Docker images
              run: docker images
              
            - name: Export Docker images
              run: |
                docker save myapp_fastapi ghcr.io/mlflow/mlflow nginx:latest -o app_bundle.tar
            
            - name: Upload bundled Docker images
              uses: actions/upload-artifact@v4
              with:
                name: docker-app-bundle
                path: app_bundle.tar
              
            
















            # - name: Log in to Docker Hub
            #   run : echo "{{ secrets.DOCKER_PASSWORD }}" | docker login -u "{{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            # - name: Build all images
            #   run: docker compose build
            
            # - name: Push images to Docker Hub
            #   run: |
            #     docker push achrafaitelquadi/fastapi:latest
            #     docker push achrafaitelquadi/nginx-reverse-proxy:latest
